From 7a6c5f1886e51b903b02a7b85fd1cb0ecafd7195 Mon Sep 17 00:00:00 2001
From: Dennis Rassmann <showp1984@gmail.com>
Date: Mon, 18 Nov 2013 03:46:50 +0100
Subject: [PATCH 313/590] sweep2wake & touchscreens: replaced flawed irq_wake
 procedures with linux functions Also init device
 wakeup in init to be able to use those functions in
 the first place

Signed-off-by: Dennis Rassmann <showp1984@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/input/touchscreen/touch_synaptics.c     |   76 ++++++-----------------
 drivers/input/touchscreen/touch_synaptics_ds5.c |   66 +++-----------------
 2 files changed, 26 insertions(+), 116 deletions(-)

diff --git a/drivers/input/touchscreen/touch_synaptics.c b/drivers/input/touchscreen/touch_synaptics.c
index 8fcac60..f64ff2e 100644
--- a/drivers/input/touchscreen/touch_synaptics.c
+++ b/drivers/input/touchscreen/touch_synaptics.c
@@ -474,12 +474,6 @@ static void touch_fw_upgrade_func(struct work_struct *work_fw_upgrade)
 
 	if (ts->curr_pwr_state == POWER_ON) {
 		disable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (irq_wake) {
-			irq_wake = false;
-			disable_irq_wake(ts->client->irq);
-		}
-#endif
 	}
 	else {
 		touch_power_cntl(ts, POWER_ON);
@@ -498,12 +492,6 @@ static void touch_fw_upgrade_func(struct work_struct *work_fw_upgrade)
 	}
 	else {
 		enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (!irq_wake) {
-			irq_wake = true;
-			enable_irq_wake(ts->client->irq);
-		}
-#endif
 
 		touch_ic_init(ts);
 
@@ -533,12 +521,6 @@ static void touch_init_func(struct work_struct *work_init)
 	TOUCH_DEBUG_TRACE("%s\n", __func__);
 
 	enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
 
 	/* Specific device initialization */
 	touch_ic_init(ts);
@@ -556,20 +538,8 @@ static void touch_recover_func(struct work_struct *work_recover)
 				struct synaptics_ts_data, work_recover);
 
 	disable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
 	safety_reset(ts);
 	enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
 	touch_ic_init(ts);
 }
 
@@ -613,12 +583,6 @@ static int touch_ic_init(struct synaptics_ts_data *ts)
 err_out_retry:
 	ts->ic_init_err_cnt++;
 	disable_irq_nosync(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
 	safety_reset(ts);
 	queue_delayed_work(synaptics_wq, &ts->work_init, msecs_to_jiffies(10));
 
@@ -1495,12 +1459,6 @@ static ssize_t store_ts_reset(struct device *dev,
 	sscanf(buf, "%s", string);
 
 	disable_irq_nosync(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
 
 	cancel_delayed_work_sync(&ts->work_init);
 
@@ -1535,12 +1493,6 @@ static ssize_t store_ts_reset(struct device *dev,
 	}
 
 	enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
 
 	if (saved_state == POWER_ON || saved_state == POWER_WAKE)
 		touch_ic_init(ts);
@@ -1656,6 +1608,11 @@ static int synaptics_ts_start(struct synaptics_ts_data *ts)
 	queue_delayed_work(synaptics_wq,
 			&ts->work_init, msecs_to_jiffies(BOOTING_DELAY));
 
+#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
+		if (device_may_wakeup(&ts->client->dev))
+			disable_irq_wake(ts->client->irq);
+#endif
+
 	return 0;
 }
 
@@ -1670,20 +1627,23 @@ static int synaptics_ts_stop(struct synaptics_ts_data *ts)
 	if (s2w_switch == 0)
 #endif
 	{
-	ts->curr_resume_state = 0;
+		ts->curr_resume_state = 0;
 
-	if (ts->fw_info.fw_upgrade.is_downloading == UNDER_DOWNLOADING) {
-		TOUCH_INFO_MSG("stop is not executed\n");
-		return 0;
-	}
+		if (ts->fw_info.fw_upgrade.is_downloading == UNDER_DOWNLOADING) {
+			TOUCH_INFO_MSG("stop is not executed\n");
+			return 0;
+		}
 
-	disable_irq(ts->client->irq);
+		disable_irq(ts->client->irq);
 
-	cancel_delayed_work_sync(&ts->work_init);
-	release_all_ts_event(ts);
-	touch_power_cntl(ts, POWER_OFF);
+		cancel_delayed_work_sync(&ts->work_init);
+		release_all_ts_event(ts);
+		touch_power_cntl(ts, POWER_OFF);
 	}
-
+#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
+	if (device_may_wakeup(&ts->client->dev))
+		enable_irq_wake(ts->client->irq);
+#endif
 	return 0;
 }
 
diff --git a/drivers/input/touchscreen/touch_synaptics_ds5.c b/drivers/input/touchscreen/touch_synaptics_ds5.c
index 32e667a..061c933 100644
--- a/drivers/input/touchscreen/touch_synaptics_ds5.c
+++ b/drivers/input/touchscreen/touch_synaptics_ds5.c
@@ -473,12 +473,6 @@ static void touch_fw_upgrade_func(struct work_struct *work_fw_upgrade)
 	saved_state = ts->curr_pwr_state;
 	if (ts->curr_pwr_state == POWER_ON) {
 		disable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (irq_wake) {
-			irq_wake = false;
-			disable_irq_wake(ts->client->irq);
-		}
-#endif
 	}
 	else {
 		touch_power_cntl(ts, POWER_ON);
@@ -495,12 +489,6 @@ static void touch_fw_upgrade_func(struct work_struct *work_fw_upgrade)
 	if (saved_state == POWER_ON) {
 		touch_ic_init(ts);
 		enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (!irq_wake) {
-			irq_wake = true;
-			enable_irq_wake(ts->client->irq);
-		}
-#endif
 	}
 	else {
 		touch_power_cntl(ts, POWER_OFF);
@@ -533,12 +521,6 @@ static void touch_init_func(struct work_struct *work_init)
 	if (!ts->curr_resume_state) {
 		enable_irq(ts->client->irq);
 		mutex_unlock(&ts->input_dev->mutex);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (!irq_wake) {
-			irq_wake = true;
-			enable_irq_wake(ts->client->irq);
-		}
-#endif
 		return;
 	}
 
@@ -546,13 +528,6 @@ static void touch_init_func(struct work_struct *work_init)
 	touch_ic_init(ts);
 	enable_irq(ts->client->irq);
 
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
-
 	mutex_unlock(&ts->input_dev->mutex);
 }
 
@@ -568,21 +543,10 @@ static void touch_recover_func(struct work_struct *work_recover)
 				struct synaptics_ts_data, work_recover);
 
 	disable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
+
 	safety_reset(ts);
 	touch_ic_init(ts);
 	enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
 }
 
 /* touch_ic_init
@@ -611,12 +575,7 @@ static int touch_ic_init(struct synaptics_ts_data *ts)
 err_out_retry:
 	ts->ic_init_err_cnt++;
 	disable_irq_nosync(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
+
 	safety_reset(ts);
 	queue_delayed_work(synaptics_wq, &ts->work_init, msecs_to_jiffies(10));
 
@@ -1463,12 +1422,6 @@ static ssize_t store_ts_reset(struct device *dev,
 	sscanf(buf, "%s", string);
 
 	disable_irq_nosync(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (irq_wake) {
-		irq_wake = false;
-		disable_irq_wake(ts->client->irq);
-	}
-#endif
 
 	cancel_delayed_work_sync(&ts->work_init);
 
@@ -1506,12 +1459,6 @@ static ssize_t store_ts_reset(struct device *dev,
 		touch_ic_init(ts);
 
 	enable_irq(ts->client->irq);
-#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-	if (!irq_wake) {
-		irq_wake = true;
-		enable_irq_wake(ts->client->irq);
-	}
-#endif
 
 	return count;
 }
@@ -1770,6 +1717,10 @@ static int lcd_notifier_callback(struct notifier_block *this,
 				msecs_to_jiffies(70));
 		}
 		mutex_unlock(&ts->input_dev->mutex);
+#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
+		if (device_may_wakeup(&ts->client->dev))
+			disable_irq_wake(ts->client->irq);
+#endif
 		break;
 	case LCD_EVENT_OFF_START:
 #ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
@@ -1790,10 +1741,8 @@ static int lcd_notifier_callback(struct notifier_block *this,
 			mutex_unlock(&ts->input_dev->mutex);
 		}
 #ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
-		if (!irq_wake) {
-			irq_wake = true;
+		if (device_may_wakeup(&ts->client->dev))
 			enable_irq_wake(ts->client->irq);
-		}
 #endif
 		break;
 	default:
@@ -1930,6 +1879,7 @@ static int synaptics_ts_probe(
 	ret = request_threaded_irq(client->irq, NULL, touch_irq_handler,
 #ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE_PREVENT_SLEEP
 			IRQF_TRIGGER_FALLING | IRQF_ONESHOT | IRQF_NO_SUSPEND, client->name, ts);
+	device_init_wakeup(&client->dev, 1);
 #else
 			IRQF_TRIGGER_FALLING | IRQF_ONESHOT, client->name, ts);
 #endif
-- 
1.7.9.5

