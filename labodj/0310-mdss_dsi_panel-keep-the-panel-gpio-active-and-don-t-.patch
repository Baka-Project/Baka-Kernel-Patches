From d05e3091d8784dfea41d5ec00c34327acb053b4c Mon Sep 17 00:00:00 2001
From: Dennis Rassmann <showp1984@gmail.com>
Date: Sun, 17 Nov 2013 03:21:17 +0100
Subject: [PATCH 310/590] mdss_dsi_panel: keep the panel gpio active and don't
 trigger a reset

This way we will suffer minimum leakage when sweep2wake is being used.
All that is kept online here is the chip controlling the panel and touch panel.
That chip is probably some pmic but either way, keeping it online will cause
minimum leakage. This is an improvement upon the original patch by flar2 which
led to massive leakage from the display regulators since all were kept online.

Signed-off-by: Dennis Rassmann <showp1984@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/video/msm/mdss/mdss_dsi_panel.c |   24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/drivers/video/msm/mdss/mdss_dsi_panel.c b/drivers/video/msm/mdss/mdss_dsi_panel.c
index 722ef2c..ab432e5 100644
--- a/drivers/video/msm/mdss/mdss_dsi_panel.c
+++ b/drivers/video/msm/mdss/mdss_dsi_panel.c
@@ -234,14 +234,24 @@ void mdss_dsi_panel_reset(struct mdss_panel_data *pdata, int enable)
 			mdss_panel_id == PANEL_LGE_JDI_ORISE_CMD ||
 			mdss_panel_id == PANEL_LGE_JDI_NOVATEK_VIDEO ||
 			mdss_panel_id == PANEL_LGE_JDI_NOVATEK_CMD) {
-			if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
-				gpio_set_value((ctrl_pdata->disp_en_gpio), 0);
-			usleep(20 * 1000);
-			gpio_set_value((ctrl_pdata->rst_gpio), 0);
+#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE
+			if (s2w_switch == 0)
+#endif
+			{
+				if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
+					gpio_set_value((ctrl_pdata->disp_en_gpio), 0);
+				usleep(20 * 1000);
+				gpio_set_value((ctrl_pdata->rst_gpio), 0);
+			}
 		} else {
-			gpio_set_value((ctrl_pdata->rst_gpio), 0);
-			if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
-				gpio_set_value((ctrl_pdata->disp_en_gpio), 0);
+#ifdef CONFIG_TOUCHSCREEN_SWEEP2WAKE
+			if (s2w_switch == 0)
+#endif
+			{
+				gpio_set_value((ctrl_pdata->rst_gpio), 0);
+				if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
+					gpio_set_value((ctrl_pdata->disp_en_gpio), 0);
+			}
 		}
 	}
 }
-- 
1.7.9.5

