From f371ae173a4279d688e054c71ab476569a51dc33 Mon Sep 17 00:00:00 2001
From: Devin Kim <dojip.kim@lge.com>
Date: Fri, 25 Oct 2013 18:23:11 -0700
Subject: [PATCH 216/590] msm_serial_hs: Fix the unbalanced clk_count

If clock vote is failed, clk_count is added. It may cause the unbalanced
clk_count. Also it's possible to be nagative clk_count on unvote. So do
not decrease the clk_count if it's already zero.

Change-Id: Ic63efd9447a18caaa8fabada4d4cae90558c8785
Signed-off-by: Devin Kim <dojip.kim@lge.com>
Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/tty/serial/msm_serial_hs.c |   17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

diff --git a/drivers/tty/serial/msm_serial_hs.c b/drivers/tty/serial/msm_serial_hs.c
index ece7fd5..6692482 100644
--- a/drivers/tty/serial/msm_serial_hs.c
+++ b/drivers/tty/serial/msm_serial_hs.c
@@ -297,6 +297,7 @@ static int msm_hs_clock_vote(struct msm_hs_port *msm_uport)
 		/* Turn on core clk and iface clk */
 		rc = clk_prepare_enable(msm_uport->clk);
 		if (rc) {
+			atomic_dec(&msm_uport->clk_count);
 			dev_err(msm_uport->uport.dev,
 				"%s: Could not turn on core clk [%d]\n",
 				__func__, rc);
@@ -307,6 +308,7 @@ static int msm_hs_clock_vote(struct msm_hs_port *msm_uport)
 			rc = clk_prepare_enable(msm_uport->pclk);
 			if (rc) {
 				clk_disable_unprepare(msm_uport->clk);
+				atomic_dec(&msm_uport->clk_count);
 				dev_err(msm_uport->uport.dev,
 					"%s: Could not turn on pclk [%d]\n",
 					__func__, rc);
@@ -322,20 +324,7 @@ static int msm_hs_clock_vote(struct msm_hs_port *msm_uport)
 
 static void msm_hs_clock_unvote(struct msm_hs_port *msm_uport)
 {
-	int rc = atomic_dec_return(&msm_uport->clk_count);
-
-	if (rc < 0) {
-		msm_hs_bus_voting(msm_uport, BUS_RESET);
-		WARN(rc, "msm_uport->clk_count < 0!");
-		dev_err(msm_uport->uport.dev,
-			"%s: Clocks count invalid  [%d]\n", __func__,
-			atomic_read(&msm_uport->clk_count));
-		/* to balance clk_state */
-		atomic_set(&msm_uport->clk_count, 0);
-		return;
-	}
-
-	if (0 == rc) {
+	if (1 == __atomic_add_unless(&msm_uport->clk_count, -1, 0)) {
 		msm_hs_bus_voting(msm_uport, BUS_RESET);
 		/* Turn off the core clk and iface clk*/
 		clk_disable_unprepare(msm_uport->clk);
-- 
1.7.9.5

