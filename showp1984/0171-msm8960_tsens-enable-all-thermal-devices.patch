From d25d1cba25c1b3e954b4f88cddbddf659f3db035 Mon Sep 17 00:00:00 2001
From: Dennis Rassmann <showp1984@gmail.com>
Date: Tue, 8 Jan 2013 23:01:43 +0100
Subject: [PATCH 171/338] msm8960_tsens: enable all thermal devices

Signed-off-by: Dennis Rassmann <showp1984@gmail.com>

Conflicts:
	drivers/thermal/msm8960_tsens.c
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/thermal/msm8960_tsens.c |   59 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/drivers/thermal/msm8960_tsens.c b/drivers/thermal/msm8960_tsens.c
index 837ac21..e018250 100644
--- a/drivers/thermal/msm8960_tsens.c
+++ b/drivers/thermal/msm8960_tsens.c
@@ -693,6 +693,46 @@ static irqreturn_t tsens_isr(int irq, void *data)
 	return IRQ_HANDLED;
 }
 
+static void tsens8960_sensor_mode_init(void)
+{
+	unsigned int reg_cntl = 0;
+        unsigned int reg = 0, mask = 0, i = 0;
+
+	reg_cntl = readl_relaxed(TSENS_CNTL_ADDR);
+	if (tmdev->hw_type == MSM_8960 || tmdev->hw_type == MDM_9615 ||
+			tmdev->hw_type == APQ_8064) {
+		writel_relaxed(reg_cntl &
+				~((((1 << tmdev->tsens_num_sensor) - 1) >> 1)
+				<< (TSENS_SENSOR0_SHIFT + 1)), TSENS_CNTL_ADDR);
+                tmdev->sensor[TSENS_MAIN_SENSOR].mode = THERMAL_DEVICE_ENABLED;
+
+                for (i = 1; i < tmdev->tsens_num_sensor; i++) {
+                        if (tmdev->sensor[i].mode == THERMAL_DEVICE_ENABLED)
+                                continue;
+
+		        reg = readl_relaxed(TSENS_CNTL_ADDR);
+		        mask = 1 << (i + TSENS_SENSOR0_SHIFT);
+			if ((mask != SENSOR0_EN) && !(reg & SENSOR0_EN)) {
+				pr_info("Main sensor not enabled\n");
+				return;
+			}
+			writel_relaxed(reg | TSENS_SW_RST, TSENS_CNTL_ADDR);
+			if (tmdev->hw_type == MSM_8960 ||
+				tmdev->hw_type == MDM_9615 ||
+				tmdev->hw_type == APQ_8064)
+				reg |= mask | TSENS_8960_SLP_CLK_ENA
+							| TSENS_EN;
+			else
+				reg |= mask | TSENS_8660_SLP_CLK_ENA
+							| TSENS_EN;
+			tmdev->prev_reading_avail = false;
+		        writel_relaxed(reg, TSENS_CNTL_ADDR);
+
+		        tmdev->sensor[i].mode = THERMAL_DEVICE_ENABLED;
+                }
+	}
+}
+
 #ifdef CONFIG_PM
 static int tsens_suspend(struct device *dev)
 {
@@ -918,6 +958,17 @@ static int tsens_calib_sensors8960(void)
 	return 0;
 }
 
+static int tsens_check_version_support(void)
+{
+	int rc = 0;
+
+	if (tmdev->hw_type == MSM_8960)
+		if (SOCINFO_VERSION_MAJOR(socinfo_get_version()) == 1)
+			rc = -ENODEV;
+
+	return rc;
+}
+
 static int tsens_calib_sensors(void)
 {
 	int rc = -ENODEV;
@@ -955,6 +1006,12 @@ int msm_tsens_early_init(struct tsens_platform_data *pdata)
 	tmdev->tsens_num_sensor = pdata->tsens_num_sensor;
 	tmdev->hw_type = pdata->hw_type;
 
+	rc = tsens_check_version_support();
+	if (rc < 0) {
+		kfree(tmdev);
+		tmdev = NULL;
+		return rc;
+	}
 	rc = tsens_calib_sensors();
 	if (rc < 0) {
 		kfree(tmdev);
@@ -997,7 +1054,9 @@ static int __devinit tsens_tm_probe(struct platform_device *pdev)
 			rc = -ENODEV;
 			goto fail;
 		}
+		tmdev->sensor[i].mode = THERMAL_DEVICE_DISABLED;
 	}
+	tsens8960_sensor_mode_init();
 
 	rc = request_irq(TSENS_UPPER_LOWER_INT, tsens_isr,
 		IRQF_TRIGGER_RISING, "tsens_interrupt", tmdev);
-- 
1.7.9.5

