From aadad225b5cf53b16f3ab9913adcb1e3cf8f6404 Mon Sep 17 00:00:00 2001
From: Devin Kim <dojip.kim@lge.com>
Date: Wed, 30 Oct 2013 15:20:54 -0700
Subject: [PATCH 026/338] msm8974_pwm_vibrator: Add sysfs for vibrator tuning

Change-Id: I6ca3326523fe4e3c6505985f77cf1b91c41fb8b8
Signed-off-by: Devin Kim <dojip.kim@lge.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/misc/msm8974_pwm_vibrator.c |   74 +++++++++++++++++++++++++++++++----
 1 file changed, 66 insertions(+), 8 deletions(-)

diff --git a/drivers/misc/msm8974_pwm_vibrator.c b/drivers/misc/msm8974_pwm_vibrator.c
index 635271d..76da51f 100644
--- a/drivers/misc/msm8974_pwm_vibrator.c
+++ b/drivers/misc/msm8974_pwm_vibrator.c
@@ -325,9 +325,8 @@ static void msm8974_pwm_vibrator_on(struct work_struct *work)
 				work_vibrator_on);
 	int gain = vib->gain;
 	int pwm = vib->pwm;
-	/* suspend /resume logging test */
-	pr_debug("%s: gain = %d pwm = %d\n", __func__, gain, pwm);
 
+	pr_debug("%s: gain = %d pwm = %d\n", __func__, gain, pwm);
 	msm8974_pwm_vibrator_force_set(vib, gain, pwm);
 }
 
@@ -524,10 +523,21 @@ static ssize_t vibrator_amp_store(struct device *dev,
 	struct timed_output_dev *_dev = dev_get_drvdata(dev);
 	struct timed_vibrator_data *vib =
 		container_of(_dev, struct timed_vibrator_data, dev);
-	int gain;
+	long r;
+	int ret;
+
+	ret = kstrtol(buf, 10, &r);
+	if (ret < 0) {
+		pr_err("%s: failed to store value\n", __func__);
+		return ret;
+	}
+
+	if (r < 0 || r > 100) {
+		pr_err("%s: out of range\n", __func__);
+		return -EINVAL;
+	}
 
-	sscanf(buf, "%d", &gain);
-	vib->gain = gain;
+	vib->gain = r;
 
 	return size;
 }
@@ -546,10 +556,21 @@ static ssize_t vibrator_pwm_store(struct device *dev, struct device_attribute *a
 	struct timed_output_dev *_dev = dev_get_drvdata(dev);
 	struct timed_vibrator_data *vib =
 		container_of(_dev, struct timed_vibrator_data, dev);
-	int pwm;
+	long r;
+	int ret;
+
+	ret = kstrtol(buf, 10, &r);
+	if (ret < 0) {
+		pr_err("%s: failed to store value\n", __func__);
+		return ret;
+	}
 
-	sscanf(buf, "%d", &pwm);
-	vib->pwm = pwm;
+	if (r < 0) {
+		pr_err("%s: out of range\n", __func__);
+		return -EINVAL;
+	}
+
+	vib->pwm = r;
 
 	return size;
 }
@@ -659,6 +680,41 @@ static ssize_t vibrator_driving_ms_store(struct device *dev,
 	return size;
 }
 
+static ssize_t vibrator_warmup_ms_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct timed_output_dev *_dev = dev_get_drvdata(dev);
+	struct timed_vibrator_data *vib =
+		container_of(_dev, struct timed_vibrator_data, dev);
+
+	return sprintf(buf, "%d\n", vib->warmup_ms);
+}
+
+static ssize_t vibrator_warmup_ms_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)
+{
+	struct timed_output_dev *_dev = dev_get_drvdata(dev);
+	struct timed_vibrator_data *vib =
+		container_of(_dev, struct timed_vibrator_data, dev);
+	long r;
+	int ret;
+
+	ret = kstrtol(buf, 10, &r);
+	if (ret < 0) {
+		pr_err("%s: failed to store value\n", __func__);
+		return ret;
+	}
+
+	if (r < 0 || r > vib->max_timeout) {
+		pr_err("%s: out of range\n", __func__);
+		return -EINVAL;
+	}
+
+	vib->warmup_ms = r;
+
+	return size;
+}
+
 static struct device_attribute vibrator_device_attrs[] = {
 	__ATTR(amp, S_IRUGO | S_IWUSR, vibrator_amp_show, vibrator_amp_store),
 	__ATTR(n_val, S_IRUGO | S_IWUSR, vibrator_pwm_show, vibrator_pwm_store),
@@ -668,6 +724,8 @@ static struct device_attribute vibrator_device_attrs[] = {
 		vibrator_braking_ms_show, vibrator_braking_ms_store),
 	__ATTR(driving_ms, S_IRUGO | S_IWUSR,
 		vibrator_driving_ms_show, vibrator_driving_ms_store),
+	__ATTR(warmup_ms, S_IRUGO | S_IWUSR,
+		vibrator_warmup_ms_show, vibrator_warmup_ms_store),
 };
 
 static struct timed_vibrator_data msm8974_pwm_vibrator_data = {
-- 
1.7.9.5

