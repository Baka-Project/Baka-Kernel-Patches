From 8deec56538449c011f16b14fdf474167766af14f Mon Sep 17 00:00:00 2001
From: Jeremy Gebben <jgebben@codeaurora.org>
Date: Thu, 24 Oct 2013 14:07:44 -0600
Subject: [PATCH 212/517] msm: kgsl: remove KGSL_IOCTL_WAKE from context
 destruction

Adreno context destruction never needs the hardware on
to destroy the current context.

For z180, always take an active count while destroying.

Since this is the last ioctl to use KGSL_IOCTL_WAKE, remove
it entirely.

Change-Id: I97368c7f3c28f16538cc5f48b802b681d7af96ef
Signed-off-by: Jeremy Gebben <jgebben@codeaurora.org>
Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/gpu/msm/kgsl.c |   32 ++++----------------------------
 drivers/gpu/msm/z180.c |    6 ++++++
 2 files changed, 10 insertions(+), 28 deletions(-)

diff --git a/drivers/gpu/msm/kgsl.c b/drivers/gpu/msm/kgsl.c
index 4944341..7b54657 100644
--- a/drivers/gpu/msm/kgsl.c
+++ b/drivers/gpu/msm/kgsl.c
@@ -955,8 +955,6 @@ static int kgsl_release(struct inode *inodep, struct file *filep)
 	struct kgsl_context *context;
 	int next = 0;
 
-	bool have_active_count = false;
-
 	filep->private_data = NULL;
 
 	mutex_lock(&device->mutex);
@@ -976,11 +974,6 @@ static int kgsl_release(struct inode *inodep, struct file *filep)
 			 */
 
 			if (_kgsl_context_get(context)) {
-				if (!have_active_count) {
-					result = kgsl_active_count_get(device);
-					BUG_ON(result);
-					have_active_count = true;
-				}
 				kgsl_context_detach(context);
 				kgsl_context_put(context);
 			}
@@ -996,9 +989,6 @@ static int kgsl_release(struct inode *inodep, struct file *filep)
 	 */
 	kgsl_cancel_events(device, dev_priv);
 
-	if (have_active_count)
-		kgsl_active_count_put(device);
-
 	result = kgsl_close_device(device);
 	mutex_unlock(&device->mutex);
 
@@ -3366,7 +3356,6 @@ typedef long (*kgsl_ioctl_func_t)(struct kgsl_device_private *,
 		{ .cmd = (_cmd), .func = (_func), .flags = (_flags) }
 
 #define KGSL_IOCTL_LOCK		BIT(0)
-#define KGSL_IOCTL_WAKE		BIT(1)
 
 static const struct {
 	unsigned int cmd;
@@ -3403,7 +3392,7 @@ static const struct {
 			KGSL_IOCTL_LOCK),
 	KGSL_IOCTL_FUNC(IOCTL_KGSL_DRAWCTXT_DESTROY,
 			kgsl_ioctl_drawctxt_destroy,
-			KGSL_IOCTL_LOCK | KGSL_IOCTL_WAKE),
+			KGSL_IOCTL_LOCK),
 	KGSL_IOCTL_FUNC(IOCTL_KGSL_MAP_USER_MEM,
 			kgsl_ioctl_map_user_mem, 0),
 	KGSL_IOCTL_FUNC(IOCTL_KGSL_SHAREDMEM_FROM_PMEM,
@@ -3441,7 +3430,7 @@ static long kgsl_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 	struct kgsl_device_private *dev_priv = filep->private_data;
 	unsigned int nr;
 	kgsl_ioctl_func_t func;
-	int lock, ret, use_hw = 0;
+	int lock, ret;
 	char ustack[64];
 	void *uptr = NULL;
 
@@ -3499,7 +3488,6 @@ static long kgsl_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 
 		func = kgsl_ioctl_funcs[nr].func;
 		lock = kgsl_ioctl_funcs[nr].flags & KGSL_IOCTL_LOCK;
-		use_hw = kgsl_ioctl_funcs[nr].flags & KGSL_IOCTL_WAKE;
 	} else {
 		func = dev_priv->device->ftbl->ioctl;
 		if (!func) {
@@ -3511,25 +3499,13 @@ static long kgsl_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 		lock = 1;
 	}
 
-	if (lock) {
+	if (lock)
 		mutex_lock(&dev_priv->device->mutex);
-		if (use_hw) {
-			ret = kgsl_active_count_get(dev_priv->device);
-			if (ret < 0) {
-				use_hw = 0;
-				goto unlock;
-			}
-		}
-	}
 
 	ret = func(dev_priv, cmd, uptr);
 
-unlock:
-	if (lock) {
-		if (use_hw)
-			kgsl_active_count_put(dev_priv->device);
+	if (lock)
 		mutex_unlock(&dev_priv->device->mutex);
-	}
 
 	/*
 	 * Still copy back on failure, but assume function took
diff --git a/drivers/gpu/msm/z180.c b/drivers/gpu/msm/z180.c
index 4c64603..ae7aee0 100644
--- a/drivers/gpu/msm/z180.c
+++ b/drivers/gpu/msm/z180.c
@@ -920,12 +920,17 @@ z180_drawctxt_create(struct kgsl_device_private *dev_priv,
 static int
 z180_drawctxt_detach(struct kgsl_context *context)
 {
+	int ret;
 	struct kgsl_device *device;
 	struct z180_device *z180_dev;
 
 	device = context->device;
 	z180_dev = Z180_DEVICE(device);
 
+	ret = kgsl_active_count_get(device);
+	if (ret)
+		return ret;
+
 	z180_idle(device);
 
 	if (z180_dev->ringbuffer.prevctx == context->id) {
@@ -937,6 +942,7 @@ z180_drawctxt_detach(struct kgsl_context *context)
 				KGSL_MMUFLAGS_PTUPDATE);
 	}
 
+	kgsl_active_count_put(device);
 	return 0;
 }
 
-- 
1.7.9.5

