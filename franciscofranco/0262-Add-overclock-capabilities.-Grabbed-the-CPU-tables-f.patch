From 2ecb4e38d82f952e4c25fc9421ced64560d67f59 Mon Sep 17 00:00:00 2001
From: franciscofranco <franciscofranco.1990@gmail.com>
Date: Mon, 9 Dec 2013 03:13:30 +0000
Subject: [PATCH 262/517] Add overclock capabilities. Grabbed the CPU tables
 from @morfic

Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 arch/arm/boot/dts/msm8974-regulator.dtsi |    8 ++---
 arch/arm/mach-msm/acpuclock-8974.c       |   51 +++++++++++++++++++++++++++---
 arch/arm/mach-msm/cpufreq.c              |    4 ++-
 3 files changed, 54 insertions(+), 9 deletions(-)

diff --git a/arch/arm/boot/dts/msm8974-regulator.dtsi b/arch/arm/boot/dts/msm8974-regulator.dtsi
index 9de41f4..6a38980 100644
--- a/arch/arm/boot/dts/msm8974-regulator.dtsi
+++ b/arch/arm/boot/dts/msm8974-regulator.dtsi
@@ -477,7 +477,7 @@
 				<0xf908a800 0x1000>; /* APCS_ALIAS0_KPSS_MDD */
 			reg-names = "acs", "mdd";
 			regulator-min-microvolt = <500000>;
-			regulator-max-microvolt = <1100000>;
+			regulator-max-microvolt = <1200000>;
 			qcom,headroom-voltage = <150000>;
 			qcom,retention-voltage = <675000>;
 			qcom,ldo-default-voltage = <750000>;
@@ -493,7 +493,7 @@
 				<0xf909a800 0x1000>; /* APCS_ALIAS1_KPSS_MDD */
 			reg-names = "acs", "mdd";
 			regulator-min-microvolt = <500000>;
-			regulator-max-microvolt = <1100000>;
+			regulator-max-microvolt = <1200000>;
 			qcom,headroom-voltage = <150000>;
 			qcom,retention-voltage = <675000>;
 			qcom,ldo-default-voltage = <750000>;
@@ -509,7 +509,7 @@
 				<0xf90aa800 0x1000>; /* APCS_ALIAS2_KPSS_MDD */
 			reg-names = "acs", "mdd";
 			regulator-min-microvolt = <500000>;
-			regulator-max-microvolt = <1100000>;
+			regulator-max-microvolt = <1200000>;
 			qcom,headroom-voltage = <150000>;
 			qcom,retention-voltage = <675000>;
 			qcom,ldo-default-voltage = <750000>;
@@ -525,7 +525,7 @@
 				<0xf90ba800 0x1000>; /* APCS_ALIAS3_KPSS_MDD */
 			reg-names = "acs", "mdd";
 			regulator-min-microvolt = <500000>;
-			regulator-max-microvolt = <1100000>;
+			regulator-max-microvolt = <1200000>;
 			qcom,headroom-voltage = <150000>;
 			qcom,retention-voltage = <675000>;
 			qcom,ldo-default-voltage = <750000>;
diff --git a/arch/arm/mach-msm/acpuclock-8974.c b/arch/arm/mach-msm/acpuclock-8974.c
index 694d783..5baa477 100644
--- a/arch/arm/mach-msm/acpuclock-8974.c
+++ b/arch/arm/mach-msm/acpuclock-8974.c
@@ -55,7 +55,7 @@ static struct scalable scalable[] __initdata = {
 		.hfpll_phys_base = 0xF908A000,
 		.l2cpmr_iaddr = 0x4501,
 		.sec_clk_sel = 2,
-		.vreg[VREG_CORE] = { "krait0",     1100000 },
+		.vreg[VREG_CORE] = { "krait0",     1140000 },
 		.vreg[VREG_MEM]  = { "krait0_mem", 1050000 },
 		.vreg[VREG_DIG]  = { "krait0_dig", LVL_HIGH },
 		.vreg[VREG_HFPLL_A] = { "krait0_hfpll", 1800000 },
@@ -64,7 +64,7 @@ static struct scalable scalable[] __initdata = {
 		.hfpll_phys_base = 0xF909A000,
 		.l2cpmr_iaddr = 0x5501,
 		.sec_clk_sel = 2,
-		.vreg[VREG_CORE] = { "krait1",     1100000 },
+		.vreg[VREG_CORE] = { "krait1",     1140000 },
 		.vreg[VREG_MEM]  = { "krait1_mem", 1050000 },
 		.vreg[VREG_DIG]  = { "krait1_dig", LVL_HIGH },
 		.vreg[VREG_HFPLL_A] = { "krait1_hfpll", 1800000 },
@@ -73,7 +73,7 @@ static struct scalable scalable[] __initdata = {
 		.hfpll_phys_base = 0xF90AA000,
 		.l2cpmr_iaddr = 0x6501,
 		.sec_clk_sel = 2,
-		.vreg[VREG_CORE] = { "krait2",     1100000 },
+		.vreg[VREG_CORE] = { "krait2",     1140000 },
 		.vreg[VREG_MEM]  = { "krait2_mem", 1050000 },
 		.vreg[VREG_DIG]  = { "krait2_dig", LVL_HIGH },
 		.vreg[VREG_HFPLL_A] = { "krait2_hfpll", 1800000 },
@@ -82,7 +82,7 @@ static struct scalable scalable[] __initdata = {
 		.hfpll_phys_base = 0xF90BA000,
 		.l2cpmr_iaddr = 0x7501,
 		.sec_clk_sel = 2,
-		.vreg[VREG_CORE] = { "krait3",     1100000 },
+		.vreg[VREG_CORE] = { "krait3",     1140000 },
 		.vreg[VREG_MEM]  = { "krait3_mem", 1050000 },
 		.vreg[VREG_DIG]  = { "krait3_dig", LVL_HIGH },
 		.vreg[VREG_HFPLL_A] = { "krait3_hfpll", 1800000 },
@@ -280,6 +280,9 @@ static struct l2_level l2_freq_tbl_v2[] __initdata = {
 	[17] = { { 1574400, HFPLL, 1,  82 }, LVL_HIGH, 1050000, 7 },
 	[18] = { { 1651200, HFPLL, 1,  86 }, LVL_HIGH, 1050000, 7 },
 	[19] = { { 1728000, HFPLL, 1,  90 }, LVL_HIGH, 1050000, 8 },
+	[20] = { { 1804800, HFPLL, 1,  94 }, LVL_HIGH, 1050000, 8 },
+	[21] = { { 1881600, HFPLL, 1,  98 }, LVL_HIGH, 1050000, 8 },
+	[22] = { { 1958400, HFPLL, 1, 102 }, LVL_HIGH, 1050000, 8 },
 	{ }
 };
 
@@ -710,6 +713,11 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs0[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19), 1070000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19), 1085000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19), 1100000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1115000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21), 1130000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1145000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1175000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1200000, 904 },
 	{ 0, { 0 } }
 };
 
@@ -741,6 +749,12 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs1[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19), 1045000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19), 1060000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19), 1075000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1090000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21), 1105000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1120000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1150000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1175000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1200000, 957 },
 	{ 0, { 0 } }
 };
 
@@ -772,6 +786,12 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs2[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19), 1020000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19), 1035000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19), 1050000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1065000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21), 1080000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1095000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1125000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1150000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1175000, 957 },
 	{ 0, { 0 } }
 };
 
@@ -803,6 +823,12 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs3[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19),  995000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19), 1010000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19), 1025000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1040000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21), 1055000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1070000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1100000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1125000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1150000, 957 },
 	{ 0, { 0 } }
 };
 
@@ -834,6 +860,11 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs4[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19),  975000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19),  985000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19), 1000000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1015000, 723 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1045000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1075000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1100000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1125000, 957 },
 	{ 0, { 0 } }
 };
 
@@ -865,6 +896,12 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs5[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19),  955000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19),  965000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19),  975000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21), 1015000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21), 1030000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21), 1020000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1050000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1075000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1100000, 957 },
 	{ 0, { 0 } }
 };
 
@@ -896,6 +933,12 @@ static struct acpu_level acpu_freq_tbl_2p3g_pvs6[] __initdata = {
 	{ 0, { 2112000, HFPLL, 1, 110 }, L2(19),  930000, 627 },
 	{ 0, { 2188800, HFPLL, 1, 114 }, L2(19),  940000, 659 },
 	{ 1, { 2265600, HFPLL, 1, 118 }, L2(19),  950000, 691 },
+	{ 1, { 2419200, HFPLL, 1, 126 }, L2(21),  965000, 723 },
+	{ 1, { 2572800, HFPLL, 1, 134 }, L2(21),  980000, 755 },
+	{ 1, { 2726400, HFPLL, 1, 142 }, L2(21),  995000, 787 },
+	{ 1, { 2803200, HFPLL, 1, 146 }, L2(21), 1025000, 851 },
+	{ 1, { 2880000, HFPLL, 1, 150 }, L2(21), 1050000, 904 },
+	{ 1, { 3014400, HFPLL, 1, 157 }, L2(21), 1075000, 957 },
 	{ 0, { 0 } }
 };
 
diff --git a/arch/arm/mach-msm/cpufreq.c b/arch/arm/mach-msm/cpufreq.c
index 7fc8bb7..a08d5ab 100644
--- a/arch/arm/mach-msm/cpufreq.c
+++ b/arch/arm/mach-msm/cpufreq.c
@@ -282,6 +282,8 @@ static int __cpuinit msm_cpufreq_init(struct cpufreq_policy *policy)
 	policy->min = CONFIG_MSM_CPU_FREQ_MIN;
 	policy->max = CONFIG_MSM_CPU_FREQ_MAX;
 #endif
+	policy->max = 2265600;
+	policy->min = 300000;
 
 	cur_freq = acpuclk_get_rate(policy->cpu);
 	if (cpufreq_frequency_table_target(policy, table, cur_freq,
@@ -301,7 +303,7 @@ static int __cpuinit msm_cpufreq_init(struct cpufreq_policy *policy)
 		return ret;
 	pr_debug("cpufreq: cpu%d init at %d switching to %d\n",
 			policy->cpu, cur_freq, table[index].frequency);
-	policy->cur = table[index].frequency;
+	policy->cur = policy->max;
 
 	policy->cpuinfo.transition_latency =
 		acpuclk_get_switch_time() * NSEC_PER_USEC;
-- 
1.7.9.5

