From 4faf7ad8b203b6a0ce159fa63158ed2bead112ec Mon Sep 17 00:00:00 2001
From: franciscofranco <franciscofranco.1990@gmail.com>
Date: Mon, 30 Dec 2013 01:42:59 +0000
Subject: [PATCH 509/517] msm: kgsl: remove the sample_time_ms and let the
 governor run its idle_check freely like Qualcomm
 intends. I was seeing some frames being lost
 because the sample_time_ms was too big.

Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/gpu/msm/kgsl_pwrscale_trustzone.c |   27 ++++++++++++---------------
 1 file changed, 12 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/msm/kgsl_pwrscale_trustzone.c b/drivers/gpu/msm/kgsl_pwrscale_trustzone.c
index 2b8e749..5288096 100644
--- a/drivers/gpu/msm/kgsl_pwrscale_trustzone.c
+++ b/drivers/gpu/msm/kgsl_pwrscale_trustzone.c
@@ -48,27 +48,20 @@ spinlock_t tz_lock;
 #define TZ_UPDATE_ID		0x4
 #define TZ_INIT_ID		0x6
 
-unsigned long window_time = 0;
-unsigned long sample_time_ms = 100;
 unsigned int up_threshold = 50;
 unsigned int down_threshold = 25;
 unsigned int up_differential = 10;
 bool debug = 0;
 unsigned long gpu_pref_counter;
 
-module_param(sample_time_ms, long, 0664);
 module_param(up_threshold, int, 0664);
 module_param(down_threshold, int, 0664);
 module_param(debug, bool, 0664);
 
 static struct clk_scaling_stats {
-	unsigned long total_time_ms;
-	unsigned long busy_time_ms;
 	unsigned long threshold;
 	unsigned int load;
 } gpu_stats = {
-	.total_time_ms = 0,
-	.busy_time_ms = 0,
 	.threshold = 0,
 	.load = 0,
 };
@@ -158,15 +151,22 @@ static void tz_idle(struct kgsl_device *device, struct kgsl_pwrscale *pwrscale)
 	if (stats.total_time == 0 || priv->bin.busy_time < FLOOR)
 		return;
 
-	if (time_is_after_jiffies(window_time + msecs_to_jiffies(sample_time_ms)))
-		return;
-
 	if (stats.busy_time >= 1 << 24 || stats.total_time >= 1 << 24) 
 	{
 		stats.busy_time >>= 7;
 		stats.total_time >>= 7;
 	}
 
+	/*
+	 * If there is an extended block of busy processing,
+	 * increase frequency. Otherwise run the normal algorithm.
+	 */
+	if (priv->bin.busy_time > CEILING) 
+	{
+		kgsl_pwrctrl_pwrlevel_change(device, pwr->max_pwrlevel);
+		goto clear;
+	}
+
 	gpu_stats.load = (100 * priv->bin.busy_time);
 	do_div(gpu_stats.load, priv->bin.total_time);
 
@@ -204,9 +204,9 @@ static void tz_idle(struct kgsl_device *device, struct kgsl_pwrscale *pwrscale)
 					     pwr->active_pwrlevel + 1);
 	}
 
+clear:
 	priv->bin.total_time = 0;
 	priv->bin.busy_time = 0;
-	window_time = jiffies;
 }
 
 static void tz_busy(struct kgsl_device *device,
@@ -221,9 +221,7 @@ static void tz_sleep(struct kgsl_device *device,
 	struct tz_priv *priv = pwrscale->priv;
 	struct kgsl_pwrctrl *pwr = &device->pwrctrl;
 
-	/* Do not ramp down forcelfully if the load is still above down_threshold */
-	if (gpu_stats.load < down_threshold)
-		kgsl_pwrctrl_pwrlevel_change(device, pwr->min_pwrlevel);
+	kgsl_pwrctrl_pwrlevel_change(device, pwr->min_pwrlevel);
 
 	if (debug)
 	{
@@ -234,7 +232,6 @@ static void tz_sleep(struct kgsl_device *device,
 	gpu_pref_counter = 0;
 	priv->bin.total_time = 0;
 	priv->bin.busy_time = 0;
-	window_time = jiffies;
 }
 
 #ifdef CONFIG_MSM_SCM
-- 
1.7.9.5

