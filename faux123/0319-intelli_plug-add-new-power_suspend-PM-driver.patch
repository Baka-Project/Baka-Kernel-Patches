From 51ebdf838043397732ef0ce2435c5d1377092079 Mon Sep 17 00:00:00 2001
From: Paul Reioux <reioux@gmail.com>
Date: Tue, 29 Oct 2013 15:39:39 -0500
Subject: [PATCH 319/338] intelli_plug: add new power_suspend PM driver

bump version to 1.9

Signed-off-by: Paul Reioux <reioux@gmail.com>
---
 arch/arm/mach-msm/intelli_plug.c | 86 ++++++++--------------------------------
 1 file changed, 16 insertions(+), 70 deletions(-)

diff --git a/arch/arm/mach-msm/intelli_plug.c b/arch/arm/mach-msm/intelli_plug.c
index 10da751..d0fbd0d 100644
--- a/arch/arm/mach-msm/intelli_plug.c
+++ b/arch/arm/mach-msm/intelli_plug.c
@@ -20,15 +20,15 @@
 #include <linux/module.h>
 #include <linux/rq_stats.h>
 
-#include <linux/module.h>
-#include <linux/kobject.h>
-#include <linux/sysfs.h>
+#if CONFIG_POWERSUSPEND
+#include <linux/powersuspend.h>
+#endif
 
 //#define DEBUG_INTELLI_PLUG
 #undef DEBUG_INTELLI_PLUG
 
 #define INTELLI_PLUG_MAJOR_VERSION	1
-#define INTELLI_PLUG_MINOR_VERSION	8
+#define INTELLI_PLUG_MINOR_VERSION	9
 
 #define DEF_SAMPLING_MS			(250)
 #define BUSY_SAMPLING_MS		(100)
@@ -60,8 +60,6 @@ static unsigned int busy_persist_count = 0;
 
 static bool suspended = false;
 
-static int sleep_active = 0;
-
 #define NR_FSHIFT	3
 static unsigned int nr_fshift = NR_FSHIFT;
 module_param(nr_fshift, uint, 0644);
@@ -289,7 +287,8 @@ static void __cpuinit intelli_plug_work_fn(struct work_struct *work)
 		msecs_to_jiffies(sampling_time));
 }
 
-static void intelli_plug_suspend(void)
+#ifdef CONFIG_POWERSUSPEND
+static void intelli_plug_suspend(struct power_suspend *handler)
 {
 	int i;
 	int num_of_active_cores = 4;
@@ -306,7 +305,7 @@ static void intelli_plug_suspend(void)
 	}
 }
 
-static void __cpuinit intelli_plug_resume(void)
+static void __cpuinit intelli_plug_resume(struct power_suspend *handler)
 {
 	int num_of_active_cores;
 	int i;
@@ -331,71 +330,14 @@ static void __cpuinit intelli_plug_resume(void)
 		msecs_to_jiffies(10));
 }
 
-static ssize_t __cpuinit sleep_active_store(struct kobject *kobj,
-                struct kobj_attribute *attr, const char *buf, size_t count)
-{
-	int input = 0;
-
-	sscanf(buf, "%d", &input);
-
-	if (input == 0) {
-		if (sleep_active == 1) {
-			intelli_plug_resume();
-			sleep_active = 0;
-		}
-	} else {
-		if (sleep_active == 0) {
-			intelli_plug_suspend();
-			sleep_active = 1;
-		}
-	}
-	return 0;
-}
-
-static ssize_t sleep_active_show(struct kobject *kobj,
-                                struct kobj_attribute *attr, char *buf)
-{
-	return sprintf(buf, "%d", sleep_active);
-}
-
-static struct kobj_attribute sleep_active_attribute_driver = 
-	__ATTR(sleep_active_status, 0666,
-		sleep_active_show, sleep_active_store);
-
-static struct attribute *sleep_active_attrs[] =
-        {
-                &sleep_active_attribute_driver.attr,
-                NULL,
-        };
-
-static struct attribute_group sleep_active_attr_group =
-        {
-                .attrs = sleep_active_attrs,
-        };
-
-static struct kobject *sleep_active_kobj;
+static struct power_suspend intelli_plug_power_suspend_driver = {
+	.suspend = intelli_plug_suspend,
+	.resume = intelli_plug_resume,
+};
+#endif  /* CONFIG_POWERSUSPEND */
 
 int __init intelli_plug_init(void)
 {
-	/* We want all CPUs to do sampling nearly on same jiffy */
-	int sysfs_result;
-
-	sleep_active_kobj =
-		kobject_create_and_add("intelliplug", kernel_kobj);
-
-        if (!sleep_active_kobj) {
-                pr_err("%s intelliplug create failed!\n",
-                        __FUNCTION__);
-                return -ENOMEM;
-        }
-
-        sysfs_result = sysfs_create_group(sleep_active_kobj,
-                        &sleep_active_attr_group);
-
-        if (sysfs_result) {
-                pr_info("%s sysfs create failed!\n", __FUNCTION__);
-                kobject_put(sleep_active_kobj);
-        }
 
 	//pr_info("intelli_plug: scheduler delay is: %d\n", delay);
 	pr_info("intelli_plug: version %d.%d by faux123\n",
@@ -404,6 +346,10 @@ int __init intelli_plug_init(void)
 
 	sampling_time = DEF_SAMPLING_MS;
 
+#ifdef CONFIG_POWERSUSPEND
+	register_power_suspend(&intelli_plug_power_suspend_driver);
+#endif
+
 	INIT_DELAYED_WORK(&intelli_plug_work, intelli_plug_work_fn);
 	schedule_delayed_work_on(0, &intelli_plug_work,
 		msecs_to_jiffies(sampling_time));
-- 
1.8.1.2

