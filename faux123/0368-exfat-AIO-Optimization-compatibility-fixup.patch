From 15efdae5b5d1e5209fc18378bc984caa37900963 Mon Sep 17 00:00:00 2001
From: Paul Reioux <reioux@gmail.com>
Date: Tue, 5 Nov 2013 18:24:03 -0600
Subject: [PATCH 368/507] exfat: AIO Optimization compatibility fixup

Signed-off-by: Paul Reioux <reioux@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/exfat/exfat_super.c |   22 ++++++++++++++++++++--
 fs/Kconfig                  |    5 +++++
 2 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/drivers/exfat/exfat_super.c b/drivers/exfat/exfat_super.c
index 8c93763..b62c722 100644
--- a/drivers/exfat/exfat_super.c
+++ b/drivers/exfat/exfat_super.c
@@ -1334,8 +1334,12 @@ static int exfat_write_end(struct file *file, struct address_space *mapping,
 }
 
 static ssize_t exfat_direct_IO(int rw, struct kiocb *iocb,
-					   const struct iovec *iov,
-					   loff_t offset, unsigned long nr_segs)
+#ifdef CONFIG_AIO_OPTIMIZATION
+				struct iov_iter *iter, loff_t offset)
+#else
+				const struct iovec *iov,
+				loff_t offset, unsigned long nr_segs)
+#endif
 {
 	struct inode *inode = iocb->ki_filp->f_mapping->host;
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,34)
@@ -1344,12 +1348,22 @@ static ssize_t exfat_direct_IO(int rw, struct kiocb *iocb,
 	ssize_t ret;
 
 	if (rw == WRITE) {
+#ifdef CONFIG_AIO_OPTIMIZATION
+		if (EXFAT_I(inode)->mmu_private <
+			(offset + iov_iter_count(iter)))
+#else
 		if (EXFAT_I(inode)->mmu_private < (offset + iov_length(iov, nr_segs)))
+#endif
 			return 0;
 	}
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,4,00)
+#ifdef CONFIG_AIO_OPTIMIZATION
+	ret = blockdev_direct_IO(rw, iocb, inode, iter, offset,
+				 exfat_get_block);
+#else
 	ret = blockdev_direct_IO(rw, iocb, inode, iov,
 					offset, nr_segs, exfat_get_block);
+#endif
 #else
         ret = blockdev_direct_IO(rw, iocb, inode, inode->i_sb->s_bdev, iov,
 					offset, nr_segs, exfat_get_block, NULL);
@@ -1357,8 +1371,12 @@ static ssize_t exfat_direct_IO(int rw, struct kiocb *iocb,
 
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,34)
 	if ((ret < 0) && (rw & WRITE))
+#ifdef CONFIG_AIO_OPTIMIZATION
+		exfat_write_failed(mapping, offset+iov_iter_count(iter));
+#else
 		exfat_write_failed(mapping, offset+iov_length(iov, nr_segs));
 #endif
+#endif
 	return ret;
 
 }
diff --git a/fs/Kconfig b/fs/Kconfig
index 1dd4948..53d688b 100644
--- a/fs/Kconfig
+++ b/fs/Kconfig
@@ -280,4 +280,9 @@ endif # NETWORK_FILESYSTEMS
 source "fs/nls/Kconfig"
 source "fs/dlm/Kconfig"
 
+config AIO_OPTIMIZATION
+	bool "AIO kernel optimization patches"
+	default y
+	help
+	  An experimental AIO FS kernel optimization
 endmenu
-- 
1.7.9.5

