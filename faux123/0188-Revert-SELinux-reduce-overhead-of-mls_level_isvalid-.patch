From 74232541a1c40be923b0e19c9e1cdd74728db0b0 Mon Sep 17 00:00:00 2001
From: Paul Reioux <reioux@gmail.com>
Date: Tue, 18 Jun 2013 17:04:09 -0500
Subject: [PATCH 188/507] Revert "SELinux: reduce overhead of
 mls_level_isvalid() function call"

This reverts commit ada60871076634915c357cfa9640beb4e7730da7.

Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 security/selinux/ss/mls.c |   38 +++++++++++---------------------------
 1 file changed, 11 insertions(+), 27 deletions(-)

diff --git a/security/selinux/ss/mls.c b/security/selinux/ss/mls.c
index dd203ac..fbf9c58 100644
--- a/security/selinux/ss/mls.c
+++ b/security/selinux/ss/mls.c
@@ -160,7 +160,8 @@ void mls_sid_to_context(struct context *context,
 int mls_level_isvalid(struct policydb *p, struct mls_level *l)
 {
 	struct level_datum *levdatum;
-	struct ebitmap_node *nodel, *noded;
+	struct ebitmap_node *node;
+	int i;
 
 	if (!l->sens || l->sens > p->p_levels.nprim)
 		return 0;
@@ -169,33 +170,16 @@ int mls_level_isvalid(struct policydb *p, struct mls_level *l)
 	if (!levdatum)
 		return 0;
 
-	/*
-	 * Return 1 iff
-	 * 1. l->cat.node is NULL, or
-	 * 2. all the bits set in l->cat are also set in levdatum->level->cat,
-	 *    and
-	 * 3. the last bit set in l->cat should not be larger than
-	 *    p->p_cats.nprim.
-	 */
-	noded = levdatum->level->cat.node;
-	for (nodel = l->cat.node ; nodel ; nodel = nodel->next) {
-		int i, lastsetbit = -1;
-
-		for (i = EBITMAP_UNIT_NUMS - 1 ; i >= 0 ; i--) {
-			if (!nodel->maps[i])
-				continue;
-			if (!noded ||
-			   ((nodel->maps[i]&noded->maps[i]) != nodel->maps[i]))
-				return 0;
-			if (lastsetbit < 0)
-				lastsetbit = nodel->startbit +
-					     i * EBITMAP_UNIT_SIZE +
-					     __fls(nodel->maps[i]);
-		}
-		if ((lastsetbit >= 0) && (lastsetbit > p->p_cats.nprim))
+	ebitmap_for_each_positive_bit(&l->cat, node, i) {
+		if (i > p->p_cats.nprim)
+			return 0;
+		if (!ebitmap_get_bit(&levdatum->level->cat, i)) {
+			/*
+			 * Category may not be associated with
+			 * sensitivity.
+			 */
 			return 0;
-		if (noded)
-			noded = noded->next;
+		}
 	}
 
 	return 1;
-- 
1.7.9.5

