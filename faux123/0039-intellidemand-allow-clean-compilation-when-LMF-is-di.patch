From 6dfc0e6ac3a989e0deb93ca05d0e083898a93abe Mon Sep 17 00:00:00 2001
From: faux123 <reioux@gmail.com>
Date: Wed, 6 Mar 2013 18:51:19 -0600
Subject: [PATCH 039/338] intellidemand: allow clean compilation when LMF is
 disabled

bumped version to 4.2

Signed-off-by: faux123 <reioux@gmail.com>

Conflicts:
	arch/arm/mach-msm/cpufreq.c
---
 arch/arm/mach-msm/cpufreq.c             | 5 ++++-
 drivers/cpufreq/cpufreq_intellidemand.c | 6 ++++--
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-msm/cpufreq.c b/arch/arm/mach-msm/cpufreq.c
index 2f65fda..d7f12c6 100644
--- a/arch/arm/mach-msm/cpufreq.c
+++ b/arch/arm/mach-msm/cpufreq.c
@@ -311,7 +311,7 @@ extern bool lmf_screen_state;
 
 static void msm_cpu_early_suspend(struct early_suspend *h)
 {
-
+#ifdef CONFIG_CPUFREQ_LIMIT_MAX_FREQ
 	int cpu = 0;
 
 	for_each_possible_cpu(cpu) {
@@ -319,10 +319,12 @@ static void msm_cpu_early_suspend(struct early_suspend *h)
 		lmf_screen_state = false;
 		mutex_unlock(&per_cpu(cpufreq_suspend, cpu).suspend_mutex);
 	}
+#endif
 }
 
 static void msm_cpu_late_resume(struct early_suspend *h)
 {
+#ifdef CONFIG_CPUFREQ_LIMIT_MAX_FREQ
 	int cpu = 0;
 
 	for_each_possible_cpu(cpu) {
@@ -331,6 +333,7 @@ static void msm_cpu_late_resume(struct early_suspend *h)
 		lmf_screen_state = true;
 		mutex_unlock(&per_cpu(cpufreq_suspend, cpu).suspend_mutex);
 	}
+#endif
 }
 
 static struct early_suspend msm_cpu_early_suspend_handler = {
diff --git a/drivers/cpufreq/cpufreq_intellidemand.c b/drivers/cpufreq/cpufreq_intellidemand.c
index 60ca231..aecc356 100644
--- a/drivers/cpufreq/cpufreq_intellidemand.c
+++ b/drivers/cpufreq/cpufreq_intellidemand.c
@@ -5,6 +5,7 @@
  *            (C)  2003 Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>.
  *                      Jun Nakajima <jun.nakajima@intel.com>
  *            (C)  2012 Paul Reioux <reioux@gmail.com>
+ *            (C)  2013 Paul Reioux <reioux@gmail.com>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
@@ -31,7 +32,8 @@
 #endif
 #include <linux/rq_stats.h>
 
-#define INTELLIDEMAND_VERSION	4.1
+#define INTELLIDEMAND_MAJOR_VERSION	4
+#define INTELLIDEMAND_MINOR_VERSION	2
 
 /*
  * dbs is used in this file as a shortform for demandbased switching
@@ -1337,6 +1339,7 @@ static void do_dbs_timer(struct work_struct *work)
 		if (rq_persist_count > 0)
 			rq_persist_count--;
 
+#ifdef CONFIG_CPUFREQ_LIMIT_MAX_FREQ
 	if (rq_persist_count > 3) {
 		lmf_browsing_state = false;
 		rq_persist_count = 0;
@@ -1345,7 +1348,6 @@ static void do_dbs_timer(struct work_struct *work)
 		lmf_browsing_state = true;
 	//pr_info("Run Queue Average: %u\n", rq_info.rq_avg);
 
-#ifdef CONFIG_CPUFREQ_LIMIT_MAX_FREQ
 	if (!lmf_browsing_state && lmf_screen_state)
 	{
 		if (cpu == BOOT_CPU)
-- 
1.8.1.2

