From 1963a2c5721e8d2b7777d83d347e3cb470759b99 Mon Sep 17 00:00:00 2001
From: Paul Reioux <reioux@gmail.com>
Date: Fri, 8 Nov 2013 15:02:26 -0600
Subject: [PATCH 389/507] intelli_plug: add touch input logic

changed intelli_plug sampling rates and bump to version 2.0

Signed-off-by: Paul Reioux <reioux@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 arch/arm/mach-msm/intelli_plug.c |  104 +++++++++++++++++++++++++++++++++++---
 1 file changed, 96 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-msm/intelli_plug.c b/arch/arm/mach-msm/intelli_plug.c
index d0fbd0d..95337aa 100644
--- a/arch/arm/mach-msm/intelli_plug.c
+++ b/arch/arm/mach-msm/intelli_plug.c
@@ -19,6 +19,8 @@
 #include <linux/mutex.h>
 #include <linux/module.h>
 #include <linux/rq_stats.h>
+#include <linux/slab.h>
+#include <linux/input.h>
 
 #if CONFIG_POWERSUSPEND
 #include <linux/powersuspend.h>
@@ -27,17 +29,17 @@
 //#define DEBUG_INTELLI_PLUG
 #undef DEBUG_INTELLI_PLUG
 
-#define INTELLI_PLUG_MAJOR_VERSION	1
-#define INTELLI_PLUG_MINOR_VERSION	9
+#define INTELLI_PLUG_MAJOR_VERSION	2
+#define INTELLI_PLUG_MINOR_VERSION	0
 
-#define DEF_SAMPLING_MS			(250)
-#define BUSY_SAMPLING_MS		(100)
+#define DEF_SAMPLING_MS			(500)
+#define BUSY_SAMPLING_MS		(1000)
 
-#define DUAL_CORE_PERSISTENCE		15
-#define TRI_CORE_PERSISTENCE		12
-#define QUAD_CORE_PERSISTENCE		9
+#define DUAL_CORE_PERSISTENCE		7
+#define TRI_CORE_PERSISTENCE		4
+#define QUAD_CORE_PERSISTENCE		4
 
-#define BUSY_PERSISTENCE		30
+#define BUSY_PERSISTENCE		5
 
 #define RUN_QUEUE_THRESHOLD		38
 
@@ -336,8 +338,93 @@ static struct power_suspend intelli_plug_power_suspend_driver = {
 };
 #endif  /* CONFIG_POWERSUSPEND */
 
+static void intelli_plug_input_event(struct input_handle *handle,
+		unsigned int type, unsigned int code, int value)
+{
+#ifdef DEBUG_INTELLI_PLUG
+	pr_info("intelli_plug touched!\n");
+#endif
+	cancel_delayed_work_sync(&intelli_plug_work);
+
+	sampling_time = BUSY_SAMPLING_MS;
+	busy_persist_count = BUSY_PERSISTENCE;
+
+        schedule_delayed_work_on(0, &intelli_plug_work,
+                msecs_to_jiffies(sampling_time));
+}
+
+static int input_dev_filter(const char *input_dev_name)
+{
+	if (strstr(input_dev_name, "touchscreen") ||
+		strstr(input_dev_name, "sec_touchscreen") ||
+		strstr(input_dev_name, "touch_dev") ||
+		strstr(input_dev_name, "-keypad") ||
+		strstr(input_dev_name, "-nav") ||
+		strstr(input_dev_name, "-oj")) {
+		pr_info("touch dev: %s\n", input_dev_name);
+		return 0;
+	} else {
+		pr_info("touch dev: %s\n", input_dev_name);
+		return 1;
+	}
+}
+
+static int intelli_plug_input_connect(struct input_handler *handler,
+		struct input_dev *dev, const struct input_device_id *id)
+{
+	struct input_handle *handle;
+	int error;
+
+	if (input_dev_filter(dev->name))
+		return -ENODEV;
+
+	handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL);
+	if (!handle)
+		return -ENOMEM;
+
+	handle->dev = dev;
+	handle->handler = handler;
+	handle->name = "intelliplug";
+
+	error = input_register_handle(handle);
+	if (error)
+		goto err2;
+
+	error = input_open_device(handle);
+	if (error)
+		goto err1;
+	pr_info("%s found and connected!\n", dev->name);
+	return 0;
+err1:
+	input_unregister_handle(handle);
+err2:
+	kfree(handle);
+	return error;
+}
+
+static void intelli_plug_input_disconnect(struct input_handle *handle)
+{
+	input_close_device(handle);
+	input_unregister_handle(handle);
+	kfree(handle);
+}
+
+static const struct input_device_id intelli_plug_ids[] = {
+	{ .driver_info = 1 },
+	{ },
+};
+
+static struct input_handler intelli_plug_input_handler = {
+	.event          = intelli_plug_input_event,
+	.connect        = intelli_plug_input_connect,
+	.disconnect     = intelli_plug_input_disconnect,
+	.name           = "intelliplug_handler",
+	.id_table       = intelli_plug_ids,
+};
+
 int __init intelli_plug_init(void)
 {
+	int rc;
 
 	//pr_info("intelli_plug: scheduler delay is: %d\n", delay);
 	pr_info("intelli_plug: version %d.%d by faux123\n",
@@ -346,6 +433,7 @@ int __init intelli_plug_init(void)
 
 	sampling_time = DEF_SAMPLING_MS;
 
+	rc = input_register_handler(&intelli_plug_input_handler);
 #ifdef CONFIG_POWERSUSPEND
 	register_power_suspend(&intelli_plug_power_suspend_driver);
 #endif
-- 
1.7.9.5

