From 0b98888b023bca811c7cf50df002a16666a8cbb4 Mon Sep 17 00:00:00 2001
From: Sam Mortimer <sam@mortimer.me.uk>
Date: Mon, 30 Dec 2013 13:31:31 -0800
Subject: [PATCH 274/276] hammerhead kernel: implement always on rgb led
 support

When offms is set to 0, configure a single point
duty cycle at the desired led brightness.

Change-Id: I93b61af52ee2f695035e7f5d78814251c8d1da8d

Signed-off-by: flar2 <asegaert@gmail.com>
Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 drivers/leds/leds-qpnp.c |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/leds/leds-qpnp.c b/drivers/leds/leds-qpnp.c
index 37df669..a85b393 100644
--- a/drivers/leds/leds-qpnp.c
+++ b/drivers/leds/leds-qpnp.c
@@ -1167,6 +1167,20 @@ static int rgb_duration_config(struct qpnp_led_data *led)
 
 	if (!on_ms) {
 		return -EINVAL;
+	} else if (!off_ms) {
+		/* implement always on
+		 * note:
+		 * rgb_on_off_ms_store() bumps on_ms=0 up to RGB_LED_MIN_MS
+		 * so setting ms on/off to 0/0 in /sys results in seeing
+		 * 50/0 by the time we get here
+		 */
+		ramp_step_ms = 1000;
+		num_duty_pcts = 1;
+		pwm_cfg->duty_cycles->duty_pcts[0] =
+			(led->cdev.brightness *
+			led->rgb_cfg->calibrated_max *
+			100) /
+			(RGB_MAX_LEVEL * RGB_MAX_LEVEL);
 	} else {
 		ramp_step_ms = on_ms / 20;
 		ramp_step_ms = (ramp_step_ms < 5)? 5 : ramp_step_ms;
@@ -3045,8 +3059,9 @@ static ssize_t rgb_start_store(struct device *dev,
 			if (ret < 0)
 				dev_err(led_array[i].cdev.dev,
 					"RGB set rgb start failed (%d)\n", ret);
+			/* Checking lut flags is used to glean if the led really was started */
 			if (!(led_array[i].rgb_cfg->pwm_cfg->lut_params.flags &
-						PM_PWM_LUT_LOOP))
+						PM_PWM_LUT_RAMP_UP))
 				led_array[i].rgb_cfg->start = 0;
 			break;
 		default:
-- 
1.7.9.5

