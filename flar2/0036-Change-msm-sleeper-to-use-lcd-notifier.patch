From a5fc0d17bdbdbd6cfae3840ac627ea233e89b95e Mon Sep 17 00:00:00 2001
From: flar2 <asegaert@gmail.com>
Date: Wed, 13 Nov 2013 14:04:29 -0500
Subject: [PATCH 036/276] Change msm-sleeper to use lcd-notifier


Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 arch/arm/mach-msm/Kconfig       |    4 +--
 arch/arm/mach-msm/msm-sleeper.c |   61 ++++++++++++++++++++-------------------
 2 files changed, 34 insertions(+), 31 deletions(-)

diff --git a/arch/arm/mach-msm/Kconfig b/arch/arm/mach-msm/Kconfig
index 993c025..c2d7faa 100644
--- a/arch/arm/mach-msm/Kconfig
+++ b/arch/arm/mach-msm/Kconfig
@@ -3030,10 +3030,10 @@ config FORCE_FAST_CHARGE
 	  900mA when charging via USB.
 
 config MSM_SLEEPER
-	bool "Limit max frequency and shut off cores while screen is off"
+	bool "Limit max frequency while screen is off"
 	default y
 	help
-	  Limit max frequency and shut off cores while screen is off 
+	  Limit max frequency while screen is off 
 
 config MSM_UARTDM_Core_v14
 	bool "Use MSM BLSP based HSUART Core v1.4"
diff --git a/arch/arm/mach-msm/msm-sleeper.c b/arch/arm/mach-msm/msm-sleeper.c
index b4b17d3..3577d8a 100644
--- a/arch/arm/mach-msm/msm-sleeper.c
+++ b/arch/arm/mach-msm/msm-sleeper.c
@@ -13,66 +13,67 @@
  *
  */
 
-#include <linux/earlysuspend2.h>
 #include <linux/workqueue.h>
 #include <linux/cpu.h>
 #include <linux/module.h>
 #include <linux/cpufreq.h>
 #include <mach/cpufreq.h>
+#include <linux/lcd_notify.h>
 
-#define MSM_SLEEPER_MAJOR_VERSION	2
+#define MSM_SLEEPER_MAJOR_VERSION	3
 #define MSM_SLEEPER_MINOR_VERSION	0
 
 extern uint32_t maxscroff;
 extern uint32_t maxscroff_freq;
 
 
-#ifdef CONFIG_HAS_EARLYSUSPEND2
-static void __cpuinit msm_sleeper_early_suspend(struct early_suspend2 *h)
+struct notifier_block notif;
+
+static void msm_sleeper_suspend(void)
 {
 	int cpu;
-	int i;
-	int num_cores = 4;
 
 	for_each_possible_cpu(cpu) {
 		msm_cpufreq_set_freq_limits(cpu, MSM_CPUFREQ_NO_LIMIT, maxscroff_freq);
 		pr_info("Limit max frequency to: %d\n", maxscroff_freq);
 	}
 
-	for (i = 1; i < num_cores; i++) {
-		if (cpu_online(i))
-			cpu_down(i);
-	}
-
-
 	return; 
 }
 
-static void __cpuinit msm_sleeper_late_resume(struct early_suspend2 *h)
+static void msm_sleeper_resume(void)
 {
 	int cpu;
-	int i;
-	int num_cores = 4;
 
 	for_each_possible_cpu(cpu) {
 		msm_cpufreq_set_freq_limits(cpu, MSM_CPUFREQ_NO_LIMIT, MSM_CPUFREQ_NO_LIMIT);
 		pr_info("Restore max frequency to %d\n", MSM_CPUFREQ_NO_LIMIT);
 	}
 
-	for (i = 1; i < num_cores; i++) {
-		if (!cpu_online(i))
-			cpu_up(i);
+	return; 
+}
+
+static int lcd_notifier_callback(struct notifier_block *this,
+				unsigned long event, void *data)
+{
+	switch (event) {
+	case LCD_EVENT_ON_START:
+		msm_sleeper_resume();
+		break;
+	case LCD_EVENT_ON_END:
+		break;
+	case LCD_EVENT_OFF_START:
+		msm_sleeper_suspend();
+		break;
+	case LCD_EVENT_OFF_END:
+		break;
+	default:
+		break;
 	}
 
-	return; 
+	return 0;
 }
 
-static struct early_suspend2 msm_sleeper_early_suspend_driver = {
-	.level = EARLY_SUSPEND2_LEVEL_BLANK_SCREEN + 10,
-	.suspend = msm_sleeper_early_suspend,
-	.resume = msm_sleeper_late_resume,
-};
-#endif
 
 static int __init msm_sleeper_init(void)
 {
@@ -80,14 +81,16 @@ static int __init msm_sleeper_init(void)
 		 MSM_SLEEPER_MAJOR_VERSION,
 		 MSM_SLEEPER_MINOR_VERSION);
 
-#ifdef CONFIG_HAS_EARLYSUSPEND2
-		register_early_suspend2(&msm_sleeper_early_suspend_driver);
-#endif
+	notif.notifier_call = lcd_notifier_callback;
+
+	if (lcd_register_client(&notif))
+		printk("[msm-sleeper] error\n");
+
 	return 0;
 }
 
 MODULE_AUTHOR("flar2 <asegaert@gmail.com>");
-MODULE_DESCRIPTION("'msm-sleeper' - Limit max frequency and shut down cores while screen is off");
+MODULE_DESCRIPTION("'msm-sleeper' - Limit max frequency while screen is off");
 MODULE_LICENSE("GPL v2");
 
 late_initcall(msm_sleeper_init);
-- 
1.7.9.5

