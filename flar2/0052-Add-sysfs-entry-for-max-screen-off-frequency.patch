From 4f617cb3f6768854e603a3dd6ccb4f45c9c3a3f8 Mon Sep 17 00:00:00 2001
From: flar2 <asegaert@gmail.com>
Date: Wed, 13 Nov 2013 23:10:41 -0500
Subject: [PATCH 052/276] Add sysfs entry for max screen off frequency


Signed-off-by: Simarpreet Singh <simar@linux.com>
---
 arch/arm/mach-msm/cpufreq.c     |   44 ++++++++++++++++++++++-----------------
 arch/arm/mach-msm/msm-sleeper.c |   10 ++++++---
 2 files changed, 32 insertions(+), 22 deletions(-)

diff --git a/arch/arm/mach-msm/cpufreq.c b/arch/arm/mach-msm/cpufreq.c
index f286a56..8698927 100644
--- a/arch/arm/mach-msm/cpufreq.c
+++ b/arch/arm/mach-msm/cpufreq.c
@@ -46,7 +46,7 @@ static struct workqueue_struct *msm_cpufreq_wq;
 
 /* maxscroff */
 uint32_t maxscroff_freq = 729600;
-uint32_t maxscroff = 1; 
+uint32_t maxscroff = 0; 
 
 struct cpufreq_suspend_t {
 	struct mutex suspend_mutex;
@@ -65,23 +65,6 @@ struct cpu_freq {
 
 static DEFINE_PER_CPU(struct cpu_freq, cpu_freq_info);
 
-
-/**maxscroff**/
-static int __init cpufreq_read_arg_maxscroff(char *max_so)
-{
-	if (strcmp(max_so, "0") == 0) {
-		maxscroff = 0;
-	} else if (strcmp(max_so, "1") == 0) {
-		maxscroff = 1;
-	} else {
-		maxscroff = 0;
-	}
-	return 1;
-}
-
-__setup("max_so=", cpufreq_read_arg_maxscroff);
-/**end maxscroff**/ 
-
 static int set_cpu_freq(struct cpufreq_policy *policy, unsigned int new_freq)
 {
 	int ret = 0;
@@ -429,12 +412,35 @@ struct freq_attr msm_cpufreq_attr_max_screen_off_khz = {
 	.store = store_max_screen_off_khz,
 };
 
+static ssize_t show_max_screen_off(struct cpufreq_policy *policy, char *buf)
+{
+	return sprintf(buf, "%u\n", maxscroff);
+}
+
+static ssize_t store_max_screen_off(struct cpufreq_policy *policy,
+		const char *buf, size_t count)
+{
+	if (buf[0] >= '0' && buf[0] <= '1' && buf[1] == '\n')
+            if (maxscroff != buf[0] - '0') 
+		        maxscroff = buf[0] - '0';
+
+	return count;
+}
+
+struct freq_attr msm_cpufreq_attr_max_screen_off = {
+	.attr = { .name = "screen_off_max",
+		.mode = 0644,
+	},
+	.show = show_max_screen_off,
+	.store = store_max_screen_off,
+};
 
 /** end maxscreen off sysfs interface **/
 
 static struct freq_attr *msm_freq_attr[] = {
 	&cpufreq_freq_attr_scaling_available_freqs,
-	&msm_cpufreq_attr_max_screen_off_khz, 
+	&msm_cpufreq_attr_max_screen_off_khz,
+ 	&msm_cpufreq_attr_max_screen_off,
 	NULL,
 };
 
diff --git a/arch/arm/mach-msm/msm-sleeper.c b/arch/arm/mach-msm/msm-sleeper.c
index 3577d8a..2c13840 100644
--- a/arch/arm/mach-msm/msm-sleeper.c
+++ b/arch/arm/mach-msm/msm-sleeper.c
@@ -25,7 +25,7 @@
 
 extern uint32_t maxscroff;
 extern uint32_t maxscroff_freq;
-
+static int limit_set = 0;
 
 struct notifier_block notif;
 
@@ -37,6 +37,7 @@ static void msm_sleeper_suspend(void)
 		msm_cpufreq_set_freq_limits(cpu, MSM_CPUFREQ_NO_LIMIT, maxscroff_freq);
 		pr_info("Limit max frequency to: %d\n", maxscroff_freq);
 	}
+	limit_set = 1;
 
 	return; 
 }
@@ -49,6 +50,7 @@ static void msm_sleeper_resume(void)
 		msm_cpufreq_set_freq_limits(cpu, MSM_CPUFREQ_NO_LIMIT, MSM_CPUFREQ_NO_LIMIT);
 		pr_info("Restore max frequency to %d\n", MSM_CPUFREQ_NO_LIMIT);
 	}
+	limit_set = 0;
 
 	return; 
 }
@@ -58,12 +60,14 @@ static int lcd_notifier_callback(struct notifier_block *this,
 {
 	switch (event) {
 	case LCD_EVENT_ON_START:
-		msm_sleeper_resume();
+		if (limit_set)
+			msm_sleeper_resume();
 		break;
 	case LCD_EVENT_ON_END:
 		break;
 	case LCD_EVENT_OFF_START:
-		msm_sleeper_suspend();
+		if (maxscroff)
+			msm_sleeper_suspend();
 		break;
 	case LCD_EVENT_OFF_END:
 		break;
-- 
1.7.9.5

